FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# LazyStore

Polls is a simple API allowing consumers to view polls and vote in them.

## Transactions [/api/transactions/{?limit,offset,ordering,payment_type,bucket,sum_lte,sum_gte,cash_lte,cash_gte,change_lte,change_gte,created_at_gte,created_at_lte,updated_at_gte,updated_at_lte}]

+ Parameters
    + limit (optional) - Number of objects to show on one page
    + offset (optional) - Number of objects to skip
    
    + ordering (optional) - order by fields, add '-' before value to reverse, options are: 'bucket', 'payment_type', 'sum', 'cash', 'change', 'created_at', 'updated_at'
    + `payment_type` (optional) - filter by payment_type, options are: 'in_progress', 'completed'
    + bucket (optional) - filter by bucket ID!
    + `sum_lte` (optional) - filter by sum, lower than value, format: 2, 2.2
    + `sum_gte` (optional) - filter by sum, bigger than value, format: 2, 2.2
    + `cash_lte` (optional) - filter by cashe, lower than value, format: 2, 2.2
    + `cash_gte` (optional) - filter by cashe, bigger than value, format: 2, 2.2
    + `change_lte` (optional) - filter by change, lower than value, format: 2, 2.2
    + `change_gte` (optional) - filter by change, bigger than value, format: 2, 2.2
    + created_at_gte (optional) - filter by datetime (or date) greater than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02
    + created_at_lte (optional) - filter by datetime (or date), lower than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02
    + updated_at_gte (optional) - filter by datetime (or date) greater than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02
    + updated_at_lte (optional) - filter by datetime (or date), lower than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02

### List Transactions [GET]
List of all available transactions

+ Response 200 (application/json)

           {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "payment_type": "credit",
                        "sum": 10.0,
                        "cash": 1.0,
                        "change": 1.0,
                        "created_at": "2017-10-02T21:39:42.586652Z",
                        "updated_at": "2017-10-02T21:39:42.586757Z",
                        "bucket": {
                            "id": 1,
                            "status": "in_progress",
                            "card": 1
                        }
                    }
                ]
            }

### Create a New Transaction [POST]

+ Request (application/json)

        {    
          "payment_type": "credit",
          "sum": 10.0,
          "cash": 1.0,
          "change": 1.0,
          "bucket": 1
        }

+ Response 201 (application/json)

    + Body

            {
                "id": 1,
                "payment_type": "credit",
                "sum": 10.0,
                "cash": 1.0,
                "change": 1.0,
                "created_at": "2017-10-02T21:39:42.586652Z",
                "updated_at": "2017-10-02T21:39:42.586757Z",
                "bucket": {
                    "id": 1,
                    "status": "in_progress",
                    "card": 1
                }
            }
            
            
+ Response 400 (application/json)

    + Body

            {
                "sum": [
                    "A valid number is required."
                ],
                "bucket": [
                    "This field must be unique."
                ],
                "cash": [
                    "A valid number is required."
                ],
                "payment_type": [
                    "\"asd\" is not a valid choice."
                ],
                "change": [
                    "A valid number is required."
                ]
            }
            
            
## Transaction Detail [/api/transactions/{id}/]

### Transaction Detail [GET]

+ Response 200 (application/json)

           {
                "id": 1,
                "payment_type": "credit",
                "sum": 10,
                "cash": 1,
                "change": 1,
                "created_at": "2017-10-02T21:39:42.586652Z",
                "updated_at": "2017-10-02T21:39:42.586757Z",
                "bucket": {
                    "id": 1,
                    "status": "in_progress",
                    "card": 1
                }
            }


### Update Transaction [PUT]

+ Request (application/json)

        {    
          "payment_type": "credit",
          "sum": 10.0,
          "cash": 1.0,
          "change": 1.0,
          "bucket": 1
        }

+ Response 201 (application/json)

    + Body

            {
                "id": 1,
                "payment_type": "credit",
                "sum": 10.0,
                "cash": 1.0,
                "change": 1.0,
                "created_at": "2017-10-02T21:39:42.586652Z",
                "updated_at": "2017-10-02T21:39:42.586757Z",
                "bucket": {
                    "id": 1,
                    "status": "in_progress",
                    "card": 1
                }
            }
            
            
+ Response 400 (application/json)

    + Body

            {
                "sum": [
                    "A valid number is required."
                ],
                "bucket": [
                    "This field must be unique."
                ],
                "cash": [
                    "A valid number is required."
                ],
                "payment_type": [
                    "\"asd\" is not a valid choice."
                ],
                "change": [
                    "A valid number is required."
                ]
            }


### Delete Transaction [DELETE]

+ Response 200 (application/json)



## Buckets [/api/buckets/{?limit,offset,ordering,search,status,card,created_at_gte,created_at_lte,updated_at_gte,updated_at_lte}]

+ Parameters
    + limit (optional) - Number of objects to show on one page
    + offset (optional) - Number of objects to skip
    
    + ordering (optional) - order by fields, add '-' before value to reverse, options are: 'status', 'created_at', 'updated_at'
    + search (optional) - will search by following fields: card numer
    + status (optional) - filter by status, options are: 'in_progress', 'completed'
    + card (optional) - filter by card ID! 
    + created_at_gte (optional) - filter by datetime (or date) greater than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02
    + created_at_lte (optional) - filter by datetime (or date), lower than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02
    + updated_at_gte (optional) - filter by datetime (or date) greater than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02
    + updated_at_lte (optional) - filter by datetime (or date), lower than value, format: 2017-12-02T17:56:58.878276Z, 2017-12-02

### List Buckets [GET]
List of all available buckets

+ Response 200 (application/json)

           {
                "count": 7,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 7,
                        "items": [
                            {
                                "id": 5,
                                "product_name": "product_1",
                                "amount": 10,
                                "price": 10,
                                "bucket": 7,
                                "product": 1
                            },
                            {
                                "id": 6,
                                "product_name": "product_1",
                                "amount": 10,
                                "price": 10,
                                "bucket": 7,
                                "product": 1
                            }
                        ],
                        "status": "in_progress",
                        "card": 1
                    }
                ]
            }

### Create a New Bucket [POST]

+ Request (application/json)

        {
          "status": "in_progress",
          "card": 1,
          "items": [
            {
              "product": 1,
              "product_name": "product_1",
              "amount": 10,
              "price": 10
            }
          ]
        }

+ Response 201 (application/json)

    + Body

            {
                "id": 8,
                "items": [
                    {
                        "id": 7,
                        "product_name": "product_1",
                        "amount": 10,
                        "price": 10,
                        "bucket": 8,
                        "product": 1
                    }
                ],
                "status": "in_progress",
                "card": 1
            }
                        
            
+ Response 400 (application/json)

    + Body

            {
                "product": [
                    "Incorrect type. Expected pk value, received str."
                ]
            }


## Bucket Detail [/api/buckets/{id}/]

### Bucket Detail [GET]

+ Response 200 (application/json)

           {
                "id": 7,
                "items": [
                    {
                        "id": 5,
                        "product_name": "product_1",
                        "amount": 10,
                        "price": 10,
                        "bucket": 7,
                        "product": 1
                    },
                    {
                        "id": 6,
                        "product_name": "product_1",
                        "amount": 10,
                        "price": 10,
                        "bucket": 7,
                        "product": 1
                    }
                ],
                "status": "in_progress",
                "card": 1
            }


### Update Transaction [PUT]

+ Request (application/json)

        {
            "status": "in_progress",
            "card": 1,
            "items": [
                {
                    "product_name": "product_1",
                    "amount": 10,
                    "price": 10,
                    "bucket": 7,
                    "product": 1
                },
                {
                    "product_name": "product_1",
                    "amount": 10,
                    "price": 10,
                    "bucket": 7,
                    "product": 1
                }
            ]
        }

+ Response 201 (application/json)

    + Body

            {
                "id": 7,
                "items": [
                    {
                        "id": 8,
                        "product_name": "product_1",
                        "amount": 10,
                        "price": 10,
                        "bucket": 7,
                        "product": 1
                    },
                    {
                        "id": 9,
                        "product_name": "product_1",
                        "amount": 10,
                        "price": 10,
                        "bucket": 7,
                        "product": 1
                    }
                ],
                "status": "in_progress",
                "card": 1
            }
            
            
+ Response 400 (application/json)

    + Body

            {
                "product": [
                    "Incorrect type. Expected pk value, received str."
                ]
            }

### Delete Bucket [DELETE]

+ Response 200 (application/json)



## Product Types [/api/products/types/{?limit,offset,ordering,search,name}]

+ Parameters
    + limit (optional) - Number of objects to show on one page
    + offset (optional) - Number of objects to skip
    
    + ordering (optional) - order by fields, add '-' before value to reverse, options are: 'name'
    + search (optional) - will search by following fields: name
    + name (optional) - filter by field name


### List Product Types [GET]
List of all available product types

+ Response 200 (application/json)

           {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "name": "Vegetables",
                        "image": "http://127.0.0.1:8000/api/products/types/product_types/200000km.jpg"
                    }
                ]
            }

### Create a New Product Type [POST]

+ Request (application/json)

        {
          "name": "Vegetables"
        }

+ Response 201 (application/json)

    + Body

            {
                "id": 3,
                "name": "Vegetables",
                "image": null
            }
            
            
            
## Product Type Detail [/api/products/types/{id}/]

### Product Type Detail [GET]

+ Response 200 (application/json)

           {
                "id": 1,
                "name": "Vegetables",
                "image": "http://127.0.0.1:8000/api/products/types/1/product_types/200000km.jpg"
            }


### Update Product Type [PUT]

+ Request (application/json)

        {
          "name": "Vegetables"
        }


+ Response 201 (application/json)

    + Body
    
                {
                    "id": 1,
                    "name": "Vegetables",
                    "image": "http://127.0.0.1:8000/api/products/types/1/product_types/200000km.jpg"
                }
            
            
+ Response 400 (application/json)

    + Body
    
            {
                "name": [
                    "This field may not be null."
                ]
            }

### Delete Product Type [DELETE]

+ Response 200 (application/json)



## Upload Product Type image [/api/products/types/{id}/upload_image/]

### Upload Product Type image [PUT]

+ Request (multipart/form-data)

        "file": file content...
        
+ Response 200 (application/json)

                {
                    "id": 3,
                    "name": "Vegetables",
                    "image": "product_types/levelup__f6osGDW.jpg"
                }
                
                
## Products [/api/products/{?limit,offset,ordering,search,name,type,price_gte,price_lte}]

+ Parameters
    + limit (optional) - Number of objects to show on one page
    + offset (optional) - Number of objects to skip
    
    + ordering (optional) - order by fields, add '-' before value to reverse, options are: 'name', 'price', 'type'
    + search (optional) - will search by following fields: 'name', 'description'
    + name (optional) - filter by name
    + type (optional) - filter by product type ID! 
    + `price_gte` (optional) - filter by price greater than value, format: 2, 2.2
    + `price_lte` (optional) - filter by price, lower than value, format: 2, 2.2



### List Products [GET]
List of all available products

+ Response 200 (application/json)

           {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "name": "Apple",
                        "description": "",
                        "price": 0,
                        "image": "products/200000km.jpg",
                        "type": {
                            "id": 1,
                            "name": "Vegetables",
                            "image": "product_types/200000km.jpg"
                        }
                    }
                ]
            }

### Create a New Product [POST]

+ Request (application/json)

        {
          "name": "Apple",
          "description": "",
          "price": 0,
          "type": 1
        }

+ Response 201 (application/json)

    + Body
    
            {
                "id": 3,
                "name": "Apple",
                "description": "",
                "price": 0,
                "image": null,
                "type": 1
            }

+ Response 400

    + Body
    
            {
                "price": [
                    "A valid number is required."
                ],
                "type": [
                    "Invalid pk \"11\" - object does not exist."
                ]
            }
                   
            
## Product Detail [/api/products/{id}/]

### Product Detail [GET]

+ Response 200 (application/json)

           {
                "id": 1,
                "name": "Apple",
                "description": "",
                "price": 0,
                "image": "products/200000km.jpg",
                "type": {
                    "id": 1,
                    "name": "Vegetables",
                    "image": "product_types/200000km.jpg"
                }
            }


### Update Product Type [PUT]

+ Request (application/json)

        {
          "name": "Apple",
          "description": "",
          "price": 2,
          "type": 1
        }

+ Response 201 (application/json)

    + Body
    
                {
                    "id": 1,
                    "name": "Apple",
                    "description": "",
                    "price": 2,
                    "image": "products/200000km.jpg",
                    "type": 1
                }
            
            
+ Response 400 (application/json)

    + Body
    
            {
                "price": [
                    "A valid number is required."
                ],
                "type": [
                    "Invalid pk \"11\" - object does not exist."
                ]
            }

### Delete Product [DELETE]

+ Response 200 (application/json)



## Upload Product image [/api/products/{id}/upload_image/]

### Upload Product image [PUT]

+ Request (multipart/form-data)

        "file": file content...
        
+ Response 200 (application/json)

                {
                    "id": 1,
                    "name": "Apple",
                    "description": "",
                    "price": 2,
                    "image": "products/levelup__F7CkcxL.jpg",
                    "type": {
                        "id": 1,
                        "name": "Vegetables",
                        "image": "product_types/200000km.jpg"
                    }
                }
                
## Cards [/api/cards/{?limit,offset,ordering,search,uid,status}]

+ Parameters
    + limit (optional) - Number of objects to show on one page
    + offset (optional) - Number of objects to skip
    
    + ordering (optional) - order by fields, add '-' before value to reverse, options are: 'uid', 'status'
    + search (optional) - will search by following fields: 'uid'
    + uid (optional) - filter by uid
    + status (optional) - filter by status, options are: 'active', 'inactive'

### List Cards [GET]
List of all available cards

+ Response 200 (application/json)

           {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "uid": "123",
                        "status": "active"
                    }
                ]
            }

### Create a New Card [POST]

+ Request (application/json)

        {
            "uid": "1234",
            "status": "active"
        }

+ Response 201 (application/json)

    + Body
    
            {
                "id": 3,
                "uid": "1234",
                "status": "active"
            }

+ Response 400

    + Body
    
            {
                "uid": [
                    "Card with provided UID already exists!"
                ],
                "status": [
                    "\"xyiactive\" is not a valid choice."
                ]
            }


## Card Detail [/api/cards/{id}/]

### Card Detail [GET]

+ Response 200 (application/json)

           {
                "id": 3,
                "uid": "1234",
                "status": "active"
            }


### Update Card [PUT]

+ Request (application/json)

        {
            "uid": "1234",
            "status": "inactive"
        }

+ Response 201 (application/json)

    + Body
    
                {
                    "id": 3,
                    "uid": "1234",
                    "status": "inactive"
                }
            
            
+ Response 400 (application/json)

    + Body
    
            {
                "price": [
                    "A valid number is required."
                ],
                "type": [
                    "Invalid pk \"11\" - object does not exist."
                ]
            }

### Delete Card [DELETE]

+ Response 200 (application/json)